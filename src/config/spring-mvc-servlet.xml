<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	<!-- SpringMVC注解启用 -->
	<!-- http://blog.csdn.net/shuwei003/article/details/7281792 -->
	<context:component-scan base-package="com.web.mvc" use-default-filters="false" > 
		<context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/> 
	</context:component-scan> 


	<!-- 启动 Spring MVC 的注解功能，完成请求和注解 POJO 的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- <bean
		class="org.springframework.web.servlet.mvc.method.annotation.AbstractHandlerMethodAdapter">
		<property name="messageConveriers">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				ajax 请求后springmvc返回为json类型
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean> -->

	<!-- springmvc注解支持 -->
	<mvc:annotation-driven />

	<!-- 静态资源映射 -->
	<mvc:resources mapping="/images/**" location="/View/uimaker/images/" />
	<mvc:resources mapping="/css/**" location="/View/uimaker/css/" />
	<mvc:resources mapping="/jquery/**" location="/View/uimaker/jquery/" />
	<mvc:resources mapping="/js/**" location="/View/uimaker/js/" />
	<mvc:resources mapping="/src/**" location="/View/uimaker/src/" />

	<!-- <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %> <script 
		type="text/javascript" src='<c:url value="/js/jquery.js"></c:url>'></script> -->


	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/View/uimaker/"></property>
		<property name="suffix" value=".jsp"></property>

	</bean>

	<!-- SpingMVC调用多个方法 <bean id="pmResolver" class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver"> 
		<property name="paramName" value="action"></property> </bean> <bean id="dopmResolver" 
		class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver"> 
		<property name="paramName" value="do"></property> </bean> -->

	<!-- 定义视图解析器 <bean name="/multi" class="com.web.controller.MultController"> 
		<property name="methodNameResolver"> <ref bean="pmResolver" /> </property> 
		</bean> <bean name="/img" class="com.web.controller.StaticController"> <property 
		name="methodNameResolver"> <ref bean="dopmResolver" /> </property> </bean> 
		<bean name="/helloworld" class="com.web.controller.HelloWorldController" 
		/> -->

	<!-- SpringMVC 上传功能 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSize" value="10485760000"></property>
		<property name="maxInMemorySize" value="40960"></property>
	</bean>
</beans>